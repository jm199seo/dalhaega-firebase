{"version":3,"sources":["components/Main/index.tsx","App.tsx","config/initFirebase.ts","reportWebVitals.ts","themes/index.ts","index.tsx"],"names":["Main","App","Box","sx","backgroundColor","display","gridTemplateColumns","gap","gridTemplateRows","gridTemplateAreas","minHeight","minWidth","gridArea","firebaseConfig","apiKey","process","API_KEY","authDomain","AUTH_DOMAIN","projectId","PROJECT_ID","storageBucket","STORAGE_BUCKET","messagingSenderId","MESSAGING_SENDER_ID","appId","APP_ID","measurementId","MEASUREMENT_ID","app","initializeApp","reportWebVitals","getFirestore","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","palette","mode","ReactDOM","render","StrictMode","ThemeProvider","theme","CssBaseline","document","getElementById"],"mappings":"wMAIeA,EAFQ,kBAAM,4DCgCdC,MA9Bf,WACE,OACE,eAACC,EAAA,EAAD,CACEC,GAAI,CAEFC,gBAAiB,qBACjBC,QAAS,OACTC,oBAAqB,yCACrBC,IAAK,EACLC,iBAAkB,mBAClBC,kBAAkB,0GAIpBC,UAAU,QACVC,SAAS,QAbX,UAeE,cAACT,EAAA,EAAD,CAAKU,SAAS,SAAd,oBACA,cAACV,EAAA,EAAD,CAAKU,SAAS,UAAUT,GAAI,CAAEC,gBAAiB,aAA/C,qBAGA,cAACF,EAAA,EAAD,CAAKU,SAAS,OAAd,SACE,cAAC,EAAD,MAGF,cAACV,EAAA,EAAD,CAAKU,SAAS,SAAd,wB,gBCnBAC,EAAiB,CACrBC,OAAQC,mIAAYC,QACpBC,WAAYF,mIAAYG,YACxBC,UAAWJ,mIAAYK,WACvBC,cAAeN,mIAAYO,eAC3BC,kBAAmBR,mIAAYS,oBAC/BC,MAAOV,mIAAYW,OACnBC,cAAeZ,mIAAYa,gBAIhBC,EAAMC,YAAcjB,GCPlBkB,GDSGC,YAAaH,GCrBP,SAACI,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,QCPRQ,EAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM,UCUVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAeC,MAAOR,EAAtB,UACE,cAACS,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.c80b70ec.chunk.js","sourcesContent":["import React from 'react';\n\nconst Main: React.FC = () => <div>This is a main component</div>;\n\nexport default Main;\n","import { Box } from '@mui/material';\nimport React from 'react';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <Box\n      sx={{\n        // backgroundColor: 'rgb(10, 25, 41)',\n        backgroundColor: 'background.default',\n        display: 'grid',\n        gridTemplateColumns: 'minmax(min-content, 200px) 1fr 1fr 1fr',\n        gap: 1,\n        gridTemplateRows: '100px auto 100px',\n        gridTemplateAreas: `\"header header header header\"\n        \"sidebar main main main\"\n        \"footer footer footer footer\"`,\n      }}\n      minHeight='100vh'\n      minWidth='100vw'\n    >\n      <Box gridArea='header'>Header</Box>\n      <Box gridArea='sidebar' sx={{ backgroundColor: 'info.main' }}>\n        Sidebar\n      </Box>\n      <Box gridArea='main'>\n        <Main />\n      </Box>\n      {/* <Button variant='contained'>haha</Button> */}\n      <Box gridArea='footer'>Footer</Box>\n    </Box>\n  );\n}\n\nexport default App;\n","// Import the functions you need from the SDKs you need\n// import { getAnalytics } from 'firebase/analytics';\nimport { initializeApp } from \"firebase/app\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore/lite\";\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.API_KEY,\n  authDomain: process.env.AUTH_DOMAIN,\n  projectId: process.env.PROJECT_ID,\n  storageBucket: process.env.STORAGE_BUCKET,\n  messagingSenderId: process.env.MESSAGING_SENDER_ID,\n  appId: process.env.APP_ID,\n  measurementId: process.env.MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\n// const analytics = getAnalytics(app);\nexport const db = getFirestore(app);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nexport { darkTheme };\n","// Install fonts\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport { CssBaseline } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './config/initFirebase';\nimport reportWebVitals from './reportWebVitals';\nimport { darkTheme } from './themes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}